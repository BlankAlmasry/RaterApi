{
    "openapi": "3.0.1",
    "info": {
        "title": "RaterApi",
        "description": "Rating API, uses Glicko2 rating algorithim. feel free to contact me for a permenant api token <br><b>Public Bearer token</b>:<small>eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiMTM0OGRhYTAyM2MwMTc4NGRlNzUxZWM3NmU2ODg5NmE0NzViMTYyMWIwNTkwZjI0ODgwNWVlZWY2NmU3NmI5NmFmN2E3YjUxMTRkNDQyMDIiLCJpYXQiOjE2MzM3ODg4NTQuMjUzMjksIm5iZiI6MTYzMzc4ODg1NC4yNTMyOTUsImV4cCI6MTY2NTMyNDg1My43MTY2MTUsInN1YiI6IiIsInNjb3BlcyI6W119.dJBtK1w2iihpFvsmJdRrx5iCSu4nIjT7i8xX8UjiunoXkhjVmL0A9BhraNRf-P-P9Z-D2hCWmbAJPawQglj1LbbdgWlwzMsL_ZZOZ1an5Soq1YOPALLFgMXH0y7u4X0TCLSQFXZmNo98Di4a7ZMcGJ2yvY308OAcQJsVehwnRsHo_bjRNwz5evcCr68kf3ipx-fAQaY9UGMaumHFP43UhRS0RKPEeQ3b0UlLFq1VrIp_rO5wMOFXyVy1TAbCL-6S1iKFn8agNk0BNeDrZtsD_aPaQl8egsR_wId3MnYTUHIMy7Uwe5Jc3_tZoroPwR7HOLx61mU9OQ0MbF7CLnWqVT9btg-V05pv-4DT_5qPkfU7rfORG5JRnnH886GPpMkt34RSIkz9DQV03LhEVJnI94wgaHNQ7HMHBmlPBCRGXeEKR_u96nyHVLpOxyZ5rU6OgdSMLhLeeVjIFkak_WlOSdn9w14aFr81iuy8V11HjZIHub9a2EwO_XDORUeaxpM_mg4XXEpGsI88rAo0H_B3kIGOOsP5tXsK4M-XVypJuuY4SEkFY8rjx0u93vvc_E8vYRVLatE8AWaeP1qpADWEVxOGIKMwWkIFlSOuSdMV1_JVDI4SiooG6E-5IOXoRyX_q87ZjixutLw4sWjPYD2BaIKP1A-moq2-cL5Hc9KmSA8</small>",
        "contact": {
            "email": "Blankhussien@gmail.com"
        },
        "version": "1.0.0-alpha"
    },
    "tags": [
        {
            "name": "game",
            "description": "Create a game first"
        },
        {
            "name": "match",
            "description": "Matches of a game you already created, auto generates user if they didn't exist"
        },
        {
            "name": "user",
            "description": "Users of your games, they get auto-generated by creating matches of them playing with default rating 1500, Default rank Gold IV"
        }
    ],
    "paths": {
        "/games": {
            "get": {
                "tags": [
                    "game"
                ],
                "summary": "Get all games",
                "description": "Return all games, will return empty body if there was none",
                "operationId": "indexGames",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "League of legends"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "1 hour ago"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "rel": {
                                                                    "type": "string"
                                                                },
                                                                "href": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "game"
                ],
                "summary": "Create a new game",
                "description": "Create a game so you can arrange matches for your own users",
                "operationId": "addGame",
                "requestBody": {
                    "description": "Game details",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/Game"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Game created",
                        "content": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/games/{gameSlug}": {
            "get": {
                "tags": [
                    "game"
                ],
                "summary": "Find game by Slug",
                "description": "Returns a single Game",
                "operationId": "getGameBySlug",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Pubg"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "1 hour ago"
                                        },
                                        "links": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthroized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "game"
                ],
                "summary": "Deletes a game",
                "description": "Hard delete a game, matches of the game will be deleted as well, Users rating or statistics WILL NOT BE AFFECTED ",
                "operationId": "deleteGame",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Game slug to delete the game",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {}
                    },
                    "401": {
                        "description": "Unathourized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            },
            "patch": {
                "tags": [
                    "game"
                ],
                "summary": "Updates a game name",
                "description": "Can update game name only for now",
                "operationId": "updateGame",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Game details",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/Game"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "content": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {}
                    },
                    "401": {
                        "description": "Invalid or no api token, authorize with a valid api please",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/games/{gameSlug}/ranking": {
            "get": {
                "tags": [
                    "game"
                ],
                "summary": "Get Leaderboard of the players rating in desc order",
                "description": "Returns leaderboard of the players according to their rating, it takes only lower than 100 rating deviation by default, feel free to customize it in query parameter",
                "operationId": "getGameRanking",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxRatingDeviation",
                        "in": "query",
                        "description": "Max rating deviation allowed, possible values between 50 and 350, 100 by default",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "blank"
                                                    },
                                                    "rating": {
                                                        "type": "number",
                                                        "example": 3200.32
                                                    },
                                                    "rank": {
                                                        "type": "object",
                                                        "example": [
                                                            "rank:Challenger",
                                                            "points:600.32"
                                                        ],
                                                        "properties": {
                                                            "rank": {
                                                                "type": "string"
                                                            },
                                                            "points": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://localhost:8000/games/622119167553699860/ranking?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://localhost:8000/games/622119167553699860/ranking?page=1"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "format": "nullable",
                                                    "example": null
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "nullable",
                                                    "example": null
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "format": "nullable",
                                                                "example": "http://localhost:8000/games/622119167553699860/ranking?page=1"
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://localhost:8000/games/622119167553699860/ranking"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "example": 10
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "example": 10
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthroized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/games/{gameSlug}/ranking/{userSlug}": {
            "get": {
                "tags": [
                    "game"
                ],
                "summary": "Get a player ranking a certain game based on rating",
                "description": "Returns a rank of a single player over a game",
                "operationId": "getUserRanking",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "description": "the user slug, you can send id or anything and it would deal with it like a slug, it will return null on rank if user doesnt met the coniditions",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxRatingDeviation",
                        "in": "query",
                        "description": "Max rating deviation allowed, possible values between 50 and 350, 100 by default",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "rank": {
                                            "type": "object",
                                            "properties": {
                                                "rank": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "example": 3
                                                },
                                                "all": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "example": 32
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthroized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/games/{gameSlug}/users": {
            "get": {
                "tags": [
                    "game"
                ],
                "summary": "Get all players",
                "description": "Get all users relevant data to the selected game",
                "operationId": "gameIndexUsers",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John doe"
                                                    },
                                                    "rank": {
                                                        "type": "string",
                                                        "example": "Challenger"
                                                    },
                                                    "rating": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 2700
                                                    },
                                                    "rating_deviation": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 45
                                                    },
                                                    "rating_volatility": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "wins": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 32
                                                    },
                                                    "loses": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 27
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "rel": {
                                                                    "type": "string"
                                                                },
                                                                "href": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/games/{gameSlug}/users/{userSlug}": {
            "get": {
                "tags": [
                    "game"
                ],
                "summary": "Get certain user",
                "description": "Get a certain user data relevant to the selected game",
                "operationId": "gameShowUser",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userSlug",
                        "in": "path",
                        "description": "the user slug (out-of-his-name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "john-doe"
                                        },
                                        "rank": {
                                            "type": "string",
                                            "example": "Gold IV"
                                        },
                                        "rating": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 1650
                                        },
                                        "rating_deviation": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 120
                                        },
                                        "rating_volatility": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 0.59124512
                                        },
                                        "wins": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 32
                                        },
                                        "loses": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 27
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string",
                                                        "example": "self"
                                                    },
                                                    "href": {
                                                        "type": "string",
                                                        "example": "/games/League-of-legends/users/john-doe"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Game not found",
                        "content": {}
                    }
                }
            }
        },
        "/games/{gameSlug}/matches": {
            "get": {
                "tags": [
                    "match"
                ],
                "summary": "return all matches played in selected game",
                "description": "Returns a map of status codes to quantities",
                "operationId": "getMatches",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game you want to get matches from, it will return empty values if there were no matches",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "team_length": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "game": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Pubg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "1 hour ago"
                                                            },
                                                            "links": {
                                                                "type": "string",
                                                                "example": ""
                                                            }
                                                        }
                                                    },
                                                    "users": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "john-doe"
                                                                },
                                                                "rank": {
                                                                    "type": "string",
                                                                    "example": "Gold IV"
                                                                },
                                                                "result": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "example": 1
                                                                },
                                                                "rating": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "example": 1650
                                                                },
                                                                "rating_deviation": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "example": 120
                                                                },
                                                                "rating_volatility": {
                                                                    "type": "integer",
                                                                    "format": "int32"
                                                                },
                                                                "links": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "rel": {
                                                                                "type": "string",
                                                                                "example": "self"
                                                                            },
                                                                            "href": {
                                                                                "type": "string",
                                                                                "example": "/games/league-of-legends/users/john-doe"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "rel": {
                                                                    "type": "string"
                                                                },
                                                                "href": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "match"
                ],
                "summary": "Create a new match",
                "description": "Create a new match for the selected game",
                "operationId": "createMatch",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game you want to get matches from, it will return empty values if there were no matches",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SEND 2 TEAMS(object) EXACTLY in \"teams\" array, can be just 2 teams of a single player each, result must be 1, 0 or 0.5",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/Match"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Match created",
                        "content": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {}
                    },
                    "401": {
                        "description": "Invalid or no api token, authorize with a valid api please",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "teams"
            }
        },
        "/games/{gameSlug}/matches/{matchId}": {
            "get": {
                "tags": [
                    "match"
                ],
                "summary": "Get certain match",
                "description": "Get a certain match from the selected game",
                "operationId": "gameShowMatch",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchId",
                        "in": "path",
                        "description": "the match ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "team_length": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "game": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Pubg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "1 hour ago"
                                                },
                                                "links": {
                                                    "type": "string",
                                                    "example": ""
                                                }
                                            }
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "john-doe"
                                                    },
                                                    "rank": {
                                                        "type": "string",
                                                        "example": "Gold IV"
                                                    },
                                                    "rating": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1650
                                                    },
                                                    "rating_deviation": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 120
                                                    },
                                                    "rating_volatility": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "rel": {
                                                                    "type": "string",
                                                                    "example": "self"
                                                                },
                                                                "href": {
                                                                    "type": "string",
                                                                    "example": "/games/league-of-legends/users/john-doe"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "match"
                ],
                "summary": "Delete a match",
                "description": "Delete a match that got played in one of your games",
                "operationId": "deleteMatch",
                "parameters": [
                    {
                        "name": "gameSlug",
                        "in": "path",
                        "description": "Slug of game",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchId",
                        "in": "path",
                        "description": "the match ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "resource deleted",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get all users",
                "description": "Return all users, will return empty body if there was none",
                "operationId": "indexUsers",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John doe"
                                                    },
                                                    "links": {
                                                        "type": "object",
                                                        "properties": {},
                                                        "example": [
                                                            {
                                                                "rel": "self",
                                                                "href": "/users/john-doe"
                                                            },
                                                            {
                                                                "rel": "games",
                                                                "href": "/users/john-doe/games"
                                                            },
                                                            {
                                                                "rel": "matches",
                                                                "href": "/users/john-doe/matches"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/users/{userSlug}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "userSlug",
                        "in": "path",
                        "description": "Slug of the username that needs to be fetched(ex: John-doe)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete a user",
                "description": "Delete a user, that will result on matches record, but it will not affect ratings of other players",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "userSlug",
                        "in": "path",
                        "description": "Slug of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "resource deleted",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/users/{userSlug}/games": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get games played by a user",
                "description": "Get all user's games, it will return empty data only if you delete the games user used to play",
                "operationId": "userIndexGames",
                "parameters": [
                    {
                        "name": "userSlug",
                        "in": "path",
                        "description": "Slug of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "League of legends"
                                                    },
                                                    "rank": {
                                                        "type": "string",
                                                        "example": "Gold IV"
                                                    },
                                                    "rating": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1600
                                                    },
                                                    "rating_deviation": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 120
                                                    },
                                                    "rating_volatility": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 0.59234923
                                                    },
                                                    "wins": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 32
                                                    },
                                                    "loses": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 27
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "rel": {
                                                                    "type": "string",
                                                                    "example": "/games/league-of-legends"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/users/{userSlug}/matches": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get matches played by a user",
                "description": "Get all user's matches, it will return empty data only if you delete the games user used to play",
                "operationId": "userIndexMatches",
                "parameters": [
                    {
                        "name": "userSlug",
                        "in": "path",
                        "description": "Slug of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "game": {
                                                        "type": "string",
                                                        "example": "League-of-legends"
                                                    },
                                                    "team": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "result": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "rel": {
                                                                    "type": "string",
                                                                    "example": "self"
                                                                },
                                                                "href": {
                                                                    "type": "string",
                                                                    "example": "/games/league-of-legends/matches/1"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first_page": {
                                                    "type": "string"
                                                },
                                                "etc....": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Match": {
                "type": "object",
                "properties": {
                    "teams": {
                        "type": "array",
                        "example": [
                            {
                                "users": [
                                    "player1",
                                    "player2"
                                ],
                                "result": 1
                            },
                            {
                                "users": [
                                    "player3",
                                    "player4"
                                ],
                                "result": 0
                            }
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "users": {
                                    "type": "array",
                                    "example": [
                                        "player-1",
                                        "player-2"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "result": {
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "example": [
                            {
                                "rel": "self",
                                "href": "/users/john-doe"
                            },
                            {
                                "rel": "games",
                                "href": "/users/john-doe/games"
                            },
                            {
                                "rel": "matches",
                                "href": "/users/john-doe/matches"
                            }
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Game": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Pubg"
                    }
                }
            }
        }
    }
}
